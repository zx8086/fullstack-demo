"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var mutation_exports = {};
__export(mutation_exports, {
  MutationStore: () => MutationStore
});
module.exports = __toCommonJS(mutation_exports);
var import_client = require("../client");
var import_base = require("./base");
var import_query = require("./query");
class MutationStore extends import_base.BaseStore {
  kind = "HoudiniMutation";
  async mutate(variables, {
    metadata,
    fetch,
    event,
    ...mutationConfig
  } = {}) {
    await (0, import_client.initClient)();
    const { context } = await (0, import_query.fetchParams)(this.artifact, this.artifact.name, {
      fetch,
      metadata,
      event
    });
    return await this.observer.send({
      variables,
      fetch: context.fetch,
      metadata,
      session: context.session,
      stuff: {
        ...mutationConfig
      }
    });
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  MutationStore
});
