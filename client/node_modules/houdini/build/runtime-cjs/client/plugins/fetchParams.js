"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var fetchParams_exports = {};
__export(fetchParams_exports, {
  fetchParams: () => fetchParams
});
module.exports = __toCommonJS(fetchParams_exports);
const fetchParams = (fn = () => ({})) => () => ({
  beforeNetwork(ctx, { next, marshalVariables }) {
    next({
      ...ctx,
      fetchParams: fn({
        config: ctx.config,
        policy: ctx.policy,
        metadata: ctx.metadata,
        session: ctx.session,
        stuff: ctx.stuff,
        document: ctx.artifact,
        variables: marshalVariables(ctx),
        text: ctx.text,
        hash: ctx.hash
      })
    });
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  fetchParams
});
