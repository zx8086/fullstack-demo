"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var throwOnError_exports = {};
__export(throwOnError_exports, {
  throwOnError: () => throwOnError
});
module.exports = __toCommonJS(throwOnError_exports);
var import_lib = require("../../lib");
const throwOnError = ({ operations, error }) => () => {
  const all = operations.includes("all");
  const throwOnKind = (kind) => all || {
    [import_lib.ArtifactKind.Query]: operations.includes("query"),
    [import_lib.ArtifactKind.Mutation]: operations.includes("mutation"),
    [import_lib.ArtifactKind.Fragment]: false,
    [import_lib.ArtifactKind.Subscription]: operations.includes("subscription")
  }[kind];
  return {
    async end(ctx, { value, resolve }) {
      if (value.errors && value.errors.length > 0 && throwOnKind(ctx.artifact.kind)) {
        const result = await (error ?? defaultErrorFn)(value.errors, ctx);
        throw result;
      }
      resolve(ctx);
    }
  };
};
const defaultErrorFn = async (errors) => new Error(errors.map((error) => error.message).join(". ") + ".");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  throwOnError
});
