"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var cache_exports = {};
__export(cache_exports, {
  Cache: () => Cache
});
module.exports = __toCommonJS(cache_exports);
var import_lib = require("../lib");
var import_list = require("./list");
var import_record = require("./record");
class Cache {
  _internal_unstable;
  constructor(cache) {
    this._internal_unstable = cache;
  }
  validateInstabilityWarning() {
    if (!this.config.acceptImperativeInstability && !this.config.features?.imperativeCache) {
      console.warn(`\u26A0\uFE0F  The imperative cache API is considered unstable and will change in any minor version release
Please acknowledge this by enabling the imperative cache feature flage in your config file.
For more information: https://houdinigraphql.com/api/cache`);
    }
  }
  get(type, data) {
    this.validateInstabilityWarning();
    let recordID = this._internal_unstable._internal_unstable.id(type, data);
    if (!recordID) {
      throw new Error("todo");
    }
    return new import_record.Record({
      cache: this,
      type,
      id: recordID,
      idFields: data
    });
  }
  get config() {
    return (0, import_lib.getCurrentConfig)();
  }
  list(name, { parentID, allLists } = {}) {
    this.validateInstabilityWarning();
    return new import_list.ListCollection({
      cache: this,
      name,
      parentID,
      allLists
    });
  }
  read({
    query,
    variables
  }) {
    this.validateInstabilityWarning();
    return this._internal_unstable.read({
      selection: query.artifact.selection,
      variables
    });
  }
  write({
    query,
    variables,
    data
  }) {
    this.validateInstabilityWarning();
    this._internal_unstable.write({
      selection: query.artifact.selection,
      data,
      variables: (0, import_lib.marshalInputs)({
        config: this.config,
        artifact: query.artifact,
        input: variables
      }) ?? {}
    });
    return;
  }
  markStale(type, options) {
    return this._internal_unstable.markTypeStale(type ? { ...options, type } : void 0);
  }
  reset() {
    return this._internal_unstable.reset();
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Cache
});
