"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var test_exports = {};
__export(test_exports, {
  testCache: () => testCache,
  testFragment: () => testFragment,
  testQuery: () => testQuery
});
module.exports = __toCommonJS(test_exports);
var import_test = require("../../../test");
var import_cache = require("../../cache/cache");
var import_lib = require("../../lib");
var import_cache2 = require("../cache");
const testCache = () => new import_cache2.Cache(new import_cache.Cache((0, import_test.testConfigFile)()));
const testFragment = (selection) => ({
  artifact: {
    kind: import_lib.ArtifactKind.Fragment,
    hash: "",
    raw: "",
    name: "",
    rootType: "User",
    selection,
    pluginData: {}
  }
});
const testQuery = (selection) => ({
  artifact: {
    kind: import_lib.ArtifactKind.Query,
    hash: "",
    raw: "",
    name: "",
    rootType: "Query",
    selection,
    pluginData: {}
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  testCache,
  testFragment,
  testQuery
});
