import type { Document } from '../lib';
import { Config } from '../lib';
import type { ConfigFile } from '../runtime/lib/config';
export declare function testConfigFile({ plugins, ...config }?: Partial<ConfigFile>): ConfigFile;
export declare function testConfig(config?: Partial<ConfigFile>): Config;
export type Partial<T> = {
    [P in keyof T]?: T[P];
};
export declare function pipelineTest(config: Config, documents: string[], shouldPass: boolean, testBody?: ((result: Error | Error[]) => void) | ((docs: Document[]) => void)): () => Promise<void>;
export declare function mockCollectedDoc(query: string, data?: Partial<Document>): Document;
export declare function clearMock(): void;
export type Row = {
    title: string;
    pass: true;
    documents: string[];
    check?: (docs: Document[]) => void;
    partial_config?: Partial<Config>;
    nb_of_fail?: number;
} | {
    title: string;
    pass: false;
    documents: string[];
    check?: (result: Error | Error[]) => void;
    partial_config?: Partial<Config>;
    nb_of_fail?: number;
};
